name: Build Project

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  release:
    types:
      - created

jobs:
  build-windows-msvc:
    runs-on: windows-latest
    strategy:
      matrix:
        include:
          - { varch: x64, arch: x64 }
          - { varch: Win32, arch: x86 }
          - { varch: ARM, arch: arm }
          - { varch: ARM64, arch: arm64 }
    steps:
      - uses: actions/checkout@v4
      
      - name: Configure CMake
        run: >
          cmake -S . -B build -A ${{matrix.varch}}
          -DCP_STATIC=ON
          -DCMAKE_CONFIGURATION_TYPES="Release"
          
      - name: Build
        run: cmake --build build --config Release
        
      - name: Archive results
        if: github.event_name != 'release'
        uses: actions/upload-artifact@v4
        with:
          name: ConsolePauser-windows-msvc-${{matrix.arch}}-static
          path: build/Release/ConsolePauser.exe
      - name: Upload release
        if: github.event_name == 'release' && github.event.action == 'created'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release create ${{ github.ref }} build/Release/ConsolePauser

  build-windows-msys2:
    runs-on: windows-latest
    strategy:
      matrix:
        include:
          - { sys: MINGW64, env: x86_64, arch: x64 }
          - { sys: MINGW32, env: i686,   arch: x86 }
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup MSYS2
        uses: msys2/setup-msys2@v2
        with:
          msystem: ${{matrix.sys}}
          install: |
            mingw-w64-${{matrix.env}}-gcc
            mingw-w64-${{matrix.env}}-cmake
            mingw-w64-${{matrix.env}}-ninja
          
      - name: Configure CMake
        shell: msys2 {0}
        run: >
          cmake -B build -G "Ninja"
          -DCP_STATIC=ON
          -DCMAKE_C_COMPILER=gcc
          -DCMAKE_BUILD_TYPE=Release
        
      - name: Build
        shell: msys2 {0}
        run: cmake --build build --config Release
        
      - name: Archive results
        if: github.event_name != 'release'
        uses: actions/upload-artifact@v4
        with:
          name: ConsolePauser-windows-mingw-${{matrix.arch}}-static
          path: build/ConsolePauser.exe
      - name: Upload release
        if: github.event_name == 'release' && github.event.action == 'created'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release create ${{ github.ref }} build/ConsolePauser.exe
  
  build-linux-gcc:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - { arch: x86_64, package: gcc-x86-64-linux-gnu, compiler: x86_64-linux-gnu-gcc }
          - { arch: i386, package: gcc-i686-linux-gnu, compiler: i686-linux-gnu-gcc }
          - { arch: armel, package: gcc-arm-linux-gnueabi, compiler: arm-linux-gnueabi-gcc }
          - { arch: armhf, package: gcc-arm-linux-gnueabihf, compiler: arm-linux-gnueabihf-gcc }
          - { arch: arm64, package: gcc-aarch64-linux-gnu, compiler: aarch64-linux-gnu-gcc }
    steps:
      - uses: actions/checkout@v4
      
      - name: Install dependencies
        run: |
          sudo apt install -y ${{matrix.package}} cmake ninja-build
        
      - name: Configure CMake
        run: >
          cmake -S . -B build -G Ninja 
          -DCP_STATIC=ON
          -DCMAKE_C_COMPILER=${{matrix.compiler}}
          -DCMAKE_BUILD_TYPE=Release
      
      - name: Build
        run: cmake --build build --config Release
        
      - name: Archive results
        if: github.event_name != 'release'
        uses: actions/upload-artifact@v4
        with:
          name: ConsolePauser-linux-${{matrix.arch}}-static
          path: build/consolepauser
      
      - name: Upload release
        if: github.event_name == 'release' && github.event.action == 'created'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release create ${{ github.ref }} build/consolepauser